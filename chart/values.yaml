# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
strategyType:
enableSelector:
deploymentApiVersion: apps/v1
image:
  repository: scorpiobroker/scorpio
  tag: scorpio-aaio_1.0.3
  # tag: scorpio-aaio_0.9.11
  # repository: gitlab.iotcrawler.net:4567/metadata-repository/scorpiobroker/master
  # tag: latest
  pullPolicy: Always
  secrets:
    - name: gitlab-registry

podAnnotations: {}
application:
  track: latest
  tier: web
  migrateCommand:
  initializeCommand:
  secretName:
  secretChecksum:
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
gitlab:
  app:
  env:
  envName:
  envURL:
service:
  enabled: true
  annotations: {}
  name: broker
  type: ClusterIP
  url: http://my.host.com/
  additionalHosts:
  commonName:
  externalPort: 9090
  internalPort: 9090

zookeeper:
  name: zookeeper
  image:
    repository: zookeeper
    tag: 3.6.1
  service:
    name: zookeeper
    enabled: true
    externalPort: 2181
    internalPort: 2181
  resources:
    limits:
      cpu: 200m
      memory: 300Mi
    requests:
      cpu: 100m
      memory: 200Mi
kafka:
  name: kafka
  image:
    repository: wurstmeister/kafka
    tag: 2.12-2.5.0
  service:
    name: kafka
    enabled: true
    externalPort: 9092
    internalPort: 9092
  resources:
    limits:
      cpu: 1000m
      memory: 1.5Gi
    requests:
      cpu: 500m
      memory: 1Gi
postgres:
  name: postgres
  image:
    repository: mdillon/postgis
    tag: 11
  service:
    name: postgres
    enabled: true
    externalPort: 5432
    internalPort: 5432
  resources:
    limits:
      cpu: 600m
      memory: 600Mi
    requests:
      cpu: 300m
      memory: 400Mi

ingress:
  tls:
    enabled: true
    secretName: ""
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
  modSecurity:
    enabled: false
    secRuleEngine: "DetectionOnly"
    # secRules:
    #   - variable: ""
    #     operator: ""
    #     action: ""
prometheus:
  metrics: false
livenessProbe:
  path: "/actuator/health"
  initialDelaySeconds: 30
  timeoutSeconds: 10
  scheme: "HTTP"
  probeType: "httpGet"
readinessProbe:
  path: "/actuator/health"
  initialDelaySeconds: 30
  timeoutSeconds: 10
  scheme: "HTTP"
  probeType: "httpGet"
postgresql:
  enabled: true
  managed: false
  managedClassSelector:
    #   matchLabels:
    #     stack: gitlab (This is an example. The labels should match the labels on the CloudSQLInstanceClass)

resources:
  limits:
    cpu: 2000m
    memory: 16Gi
  requests:
    cpu: 1000m
    memory: 10Gi

## Configure PodDisruptionBudget
## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
#
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  maxUnavailable: 1

## Configure NetworkPolicy
## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
#
networkPolicy:
  enabled: false
  spec:
    podSelector:
      matchLabels: {}
    ingress:
    - from:
      - podSelector:
          matchLabels: {}
      - namespaceSelector:
          matchLabels:
            app.gitlab.com/managed_by: gitlab

workers: {}
  # worker:
  #   replicaCount: 1
  #   terminationGracePeriodSeconds: 60
  #   command:
  #   - /bin/herokuish
  #   - procfile
  #   - start
  #   - worker
  #   preStopCommand:
  #   - /bin/herokuish
  #   - procfile
  #   - start
  #   - stop_worker
